//**** Cross-compiled for `masm` syntax from `tests/no-v1-comparison/closures/closure_equality.move`

//# publish
// Bytecode version v8
module 0xc0ffee::m
use 0x1::signer
struct Wrapper<T0> has copy + drop + key
  value: T0

// Function definition at index 0
#[persistent] public fun init(l0: &signer)
    local l1: |u64|u64 has copy + drop + store
    pack_closure identity<u64>, 0
    st_loc l1
    move_loc l0
    move_loc l1
    pack Wrapper<|u64|u64 has copy + drop + store>
    // @5
    move_to Wrapper<|u64|u64 has copy + drop + store>
    ret

// Function definition at index 1
#[persistent] public fun compare(l0: |u64|u64 has copy + drop + store, l1: &signer): bool acquires Wrapper
    move_loc l1
    call signer::address_of
    borrow_global Wrapper<|u64|u64 has copy + drop + store>
    borrow_field Wrapper<|u64|u64 has copy + drop + store>, value
    read_ref
    // @5
    move_loc l0
    eq
    ret

// Function definition at index 2
#[persistent] public fun identity<T0>(l0: T0): T0
    move_loc l0
    ret



//# run 0xc0ffee::m::init --signers 0xc0ffee

//# run --signers 0xc0ffee
// Bytecode version v8
script
use 0xc0ffee::m
// Function definition at index 0
entry public fun main(l0: &signer)
    pack_closure m::identity<u64>, 0
    move_loc l0
    call m::compare
    br_false l0
    ret
    // @5
l0: ld_u64 14566554180833181696
    abort

