//**** Cross-compiled for `masm` syntax from `tests/no-v1-comparison/op_equal/eval_order.move`

//# publish
// Bytecode version v8
module 0xc0ffee::m
// Function definition at index 0
fun mod1(l0: &mut u64)
    copy_loc l0
    read_ref
    ld_u64 2
    add
    move_loc l0
    // @5
    write_ref
    ret

// Function definition at index 1
fun mod2(l0: &mut u64): u64
    local l1: &mut u64
    copy_loc l0
    st_loc l1
    copy_loc l1
    read_ref
    ld_u64 2
    // @5
    add
    move_loc l1
    write_ref
    move_loc l0
    read_ref
    // @10
    ret

// Function definition at index 2
#[persistent] public fun test0()
    local l0: u64
    local l1: u64
    ld_u64 1
    ld_u64 2
    add
    st_loc l0
    copy_loc l0
    // @5
    st_loc l1
    move_loc l0
    move_loc l1
    add
    st_loc l0
    // @10
    copy_loc l0
    st_loc l1
    move_loc l0
    move_loc l1
    add
    // @15
    ld_u64 12
    eq
    br_false l0
    ret
l0: ld_u64 14566554180833181696
    // @20
    abort

// Function definition at index 3
#[persistent] public fun test1()
    local l0: u64
    local l1: u64
    ld_u64 1
    ld_u64 2
    add
    st_loc l0
    copy_loc l0
    // @5
    st_loc l1
    move_loc l0
    move_loc l1
    add
    ld_u64 6
    // @10
    eq
    br_false l0
    ret
l0: ld_u64 14566554180833181696
    abort

// Function definition at index 4
#[persistent] public fun test2()
    local l0: u64
    local l1: u64
    ld_u64 1
    st_loc l0
    mut_borrow_loc l0
    call mod1
    copy_loc l0
    // @5
    st_loc l1
    move_loc l0
    move_loc l1
    add
    ld_u64 6
    // @10
    eq
    br_false l0
    ret
l0: ld_u64 14566554180833181696
    abort

// Function definition at index 5
#[persistent] public fun test3()
    local l0: u64
    local l1: u64
    ld_u64 1
    st_loc l0
    mut_borrow_loc l0
    call mod2
    st_loc l1
    // @5
    move_loc l0
    move_loc l1
    add
    ld_u64 6
    eq
    // @10
    br_false l0
    ret
l0: ld_u64 14566554180833181696
    abort

// Function definition at index 6
#[persistent] public fun test4()
    local l0: vector<u64>
    local l1: &vector<u64>
    local l2: u64
    local l3: u64
    local l4: &mut u64
    ld_u64 0
    ld_const<vector<u64>> [1, 2, 3]
    st_loc l0
    borrow_loc l0
    st_loc l1
    // @5
    ld_u64 1
    add
    st_loc l2
    copy_loc l2
    st_loc l3
    // @10
    move_loc l1
    move_loc l3
    vec_borrow <u64>
    read_ref
    st_loc l3
    // @15
    mut_borrow_loc l0
    move_loc l2
    ld_u64 1
    add
    vec_mut_borrow <u64>
    // @20
    st_loc l4
    copy_loc l4
    read_ref
    move_loc l3
    add
    // @25
    move_loc l4
    write_ref
    move_loc l0
    ld_const<vector<u64>> [1, 2, 5]
    eq
    // @30
    br_false l0
    ret
l0: ld_u64 14566554180833181696
    abort



//# run --verbose -- 0xc0ffee::m::test0

//# run --verbose -- 0xc0ffee::m::test1

//# run --verbose -- 0xc0ffee::m::test2

//# run --verbose -- 0xc0ffee::m::test3

//# run --verbose -- 0xc0ffee::m::test4