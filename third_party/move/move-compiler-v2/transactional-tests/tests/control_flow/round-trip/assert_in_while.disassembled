//**** Cross-compiled for `masm` syntax from `tests/control_flow/assert_in_while.move`

//# publish
// Bytecode version v8
module 0x42::Test
struct Tester has drop
  f: u64

// Function definition at index 0
#[persistent] public fun len(l0: &Tester): u64
    move_loc l0
    borrow_field Tester, f
    read_ref
    ret

// Function definition at index 1
#[persistent] public fun modify(l0: &mut Tester): u64
    copy_loc l0
    borrow_field Tester, f
    read_ref
    ld_u64 1
    sub
    // @5
    copy_loc l0
    mut_borrow_field Tester, f
    write_ref
    ld_u64 9
    move_loc l0
    // @10
    borrow_field Tester, f
    read_ref
    sub
    ret

// Function definition at index 2
#[persistent] public fun new(): Tester
    ld_u64 10
    pack Tester
    ret



//# run
// Bytecode version v8
script
use 0x42::Test
// Function definition at index 0
entry public fun main()
    local l0: Test::Tester
    local l1: u64
    call Test::new
    st_loc l0
    borrow_loc l0
    call Test::len
    ld_u64 10
    // @5
    eq
    br_false l0
    ld_u64 0
    st_loc l1
l3: copy_loc l1
    // @10
    borrow_loc l0
    call Test::len
    lt
    br_false l1
    mut_borrow_loc l0
    // @15
    call Test::modify
    copy_loc l1
    eq
    br_false l2
    move_loc l1
    // @20
    ld_u64 1
    add
    st_loc l1
    branch l3
l2: ld_u64 70003
    // @25
    abort
l1: ret
l0: ld_u64 70002
    abort

