//**** Cross-compiled for `masm` syntax from `tests/misc/greatest_product.move`

//# publish
// Bytecode version v8
module 0xc0ffee::greatest_product
// Function definition at index 0
#[persistent] public fun find_greatest_product(): u64
    local l0: u64
    local l1: u64
    local l2: vector<u8>
    local l3: u64
    local l4: vector<u8>
    local l5: vector<u8>
    local l6: vector<u8>
    local l7: vector<u8>
    local l8: u64
    ld_u64 0
    st_loc l0
    ld_u64 0
    st_loc l1
    ld_const<vector<u8>> [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3, 8, 7, 1, 5, 9, 9, 5, 9, 6, 9, 3, 2, 9, 8, 5, 3, 5, 7, 9, 3, 7, 2, 0, 0, 6, 3, 1, 7, 0, 1, 8, 8, 6, 7, 9, 8, 0, 8, 2, 8, 0, 8, 5, 1, 3, 2, 8, 7, 0, 3, 5, 0, 6, 6, 4, 8, 0, 7, 6, 7, 8, 8, 0, 1, 1, 6, 9, 5, 2, 3, 6, 1, 5, 6, 3, 0, 3, 8, 8, 6, 2, 3, 8, 8, 1, 7, 7, 4, 6, 2, 8, 2, 7, 9, 9, 4, 7, 5, 6, 4, 4, 7, 9, 9, 5, 8, 4, 7, 3, 4, 6, 7, 9, 9, 5, 3, 7, 1, 7, 6, 5, 2, 3, 7, 9, 1, 9, 9, 3, 5, 1, 9, 9, 7, 7, 8, 0, 0, 9, 8, 7, 6, 9, 7, 7, 7, 9, 9, 6, 7, 6, 9, 5, 5, 4, 8, 3, 7, 5, 5, 1, 5, 5, 8, 4, 4, 4]
    // @5
    st_loc l2
    borrow_loc l2
    vec_len <u8>
    st_loc l3
l3: copy_loc l1
    // @10
    copy_loc l3
    ld_u64 4
    sub
    le
    br_false l0
    // @15
    ld_const<vector<u8>> [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3, 8, 7, 1, 5, 9, 9, 5, 9, 6, 9, 3, 2, 9, 8, 5, 3, 5, 7, 9, 3, 7, 2, 0, 0, 6, 3, 1, 7, 0, 1, 8, 8, 6, 7, 9, 8, 0, 8, 2, 8, 0, 8, 5, 1, 3, 2, 8, 7, 0, 3, 5, 0, 6, 6, 4, 8, 0, 7, 6, 7, 8, 8, 0, 1, 1, 6, 9, 5, 2, 3, 6, 1, 5, 6, 3, 0, 3, 8, 8, 6, 2, 3, 8, 8, 1, 7, 7, 4, 6, 2, 8, 2, 7, 9, 9, 4, 7, 5, 6, 4, 4, 7, 9, 9, 5, 8, 4, 7, 3, 4, 6, 7, 9, 9, 5, 3, 7, 1, 7, 6, 5, 2, 3, 7, 9, 1, 9, 9, 3, 5, 1, 9, 9, 7, 7, 8, 0, 0, 9, 8, 7, 6, 9, 7, 7, 7, 9, 9, 6, 7, 6, 9, 5, 5, 4, 8, 3, 7, 5, 5, 1, 5, 5, 8, 4, 4, 4]
    st_loc l4
    borrow_loc l4
    copy_loc l1
    vec_borrow <u8>
    // @20
    read_ref
    cast_u64
    ld_const<vector<u8>> [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3, 8, 7, 1, 5, 9, 9, 5, 9, 6, 9, 3, 2, 9, 8, 5, 3, 5, 7, 9, 3, 7, 2, 0, 0, 6, 3, 1, 7, 0, 1, 8, 8, 6, 7, 9, 8, 0, 8, 2, 8, 0, 8, 5, 1, 3, 2, 8, 7, 0, 3, 5, 0, 6, 6, 4, 8, 0, 7, 6, 7, 8, 8, 0, 1, 1, 6, 9, 5, 2, 3, 6, 1, 5, 6, 3, 0, 3, 8, 8, 6, 2, 3, 8, 8, 1, 7, 7, 4, 6, 2, 8, 2, 7, 9, 9, 4, 7, 5, 6, 4, 4, 7, 9, 9, 5, 8, 4, 7, 3, 4, 6, 7, 9, 9, 5, 3, 7, 1, 7, 6, 5, 2, 3, 7, 9, 1, 9, 9, 3, 5, 1, 9, 9, 7, 7, 8, 0, 0, 9, 8, 7, 6, 9, 7, 7, 7, 9, 9, 6, 7, 6, 9, 5, 5, 4, 8, 3, 7, 5, 5, 1, 5, 5, 8, 4, 4, 4]
    st_loc l5
    borrow_loc l5
    // @25
    copy_loc l1
    ld_u64 1
    add
    vec_borrow <u8>
    read_ref
    // @30
    cast_u64
    mul
    ld_const<vector<u8>> [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3, 8, 7, 1, 5, 9, 9, 5, 9, 6, 9, 3, 2, 9, 8, 5, 3, 5, 7, 9, 3, 7, 2, 0, 0, 6, 3, 1, 7, 0, 1, 8, 8, 6, 7, 9, 8, 0, 8, 2, 8, 0, 8, 5, 1, 3, 2, 8, 7, 0, 3, 5, 0, 6, 6, 4, 8, 0, 7, 6, 7, 8, 8, 0, 1, 1, 6, 9, 5, 2, 3, 6, 1, 5, 6, 3, 0, 3, 8, 8, 6, 2, 3, 8, 8, 1, 7, 7, 4, 6, 2, 8, 2, 7, 9, 9, 4, 7, 5, 6, 4, 4, 7, 9, 9, 5, 8, 4, 7, 3, 4, 6, 7, 9, 9, 5, 3, 7, 1, 7, 6, 5, 2, 3, 7, 9, 1, 9, 9, 3, 5, 1, 9, 9, 7, 7, 8, 0, 0, 9, 8, 7, 6, 9, 7, 7, 7, 9, 9, 6, 7, 6, 9, 5, 5, 4, 8, 3, 7, 5, 5, 1, 5, 5, 8, 4, 4, 4]
    st_loc l6
    borrow_loc l6
    // @35
    copy_loc l1
    ld_u64 2
    add
    vec_borrow <u8>
    read_ref
    // @40
    cast_u64
    mul
    ld_const<vector<u8>> [7, 3, 1, 6, 7, 1, 7, 6, 5, 3, 1, 3, 3, 8, 7, 1, 5, 9, 9, 5, 9, 6, 9, 3, 2, 9, 8, 5, 3, 5, 7, 9, 3, 7, 2, 0, 0, 6, 3, 1, 7, 0, 1, 8, 8, 6, 7, 9, 8, 0, 8, 2, 8, 0, 8, 5, 1, 3, 2, 8, 7, 0, 3, 5, 0, 6, 6, 4, 8, 0, 7, 6, 7, 8, 8, 0, 1, 1, 6, 9, 5, 2, 3, 6, 1, 5, 6, 3, 0, 3, 8, 8, 6, 2, 3, 8, 8, 1, 7, 7, 4, 6, 2, 8, 2, 7, 9, 9, 4, 7, 5, 6, 4, 4, 7, 9, 9, 5, 8, 4, 7, 3, 4, 6, 7, 9, 9, 5, 3, 7, 1, 7, 6, 5, 2, 3, 7, 9, 1, 9, 9, 3, 5, 1, 9, 9, 7, 7, 8, 0, 0, 9, 8, 7, 6, 9, 7, 7, 7, 9, 9, 6, 7, 6, 9, 5, 5, 4, 8, 3, 7, 5, 5, 1, 5, 5, 8, 4, 4, 4]
    st_loc l7
    borrow_loc l7
    // @45
    copy_loc l1
    ld_u64 3
    add
    vec_borrow <u8>
    read_ref
    // @50
    cast_u64
    mul
    st_loc l8
    copy_loc l8
    copy_loc l0
    // @55
    gt
    br_true l1
    branch l2
l1: move_loc l8
    st_loc l0
    // @60
l2: move_loc l1
    ld_u64 1
    add
    st_loc l1
    branch l3
    // @65
l0: move_loc l0
    ret

// Function definition at index 1
#[persistent] public fun test_find_greatest_product()
    call find_greatest_product
    ld_u64 3969
    eq
    br_false l0
    ret
    // @5
l0: ld_u64 0
    abort



//# run 0xc0ffee::greatest_product::test_find_greatest_product