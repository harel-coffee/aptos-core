//**** Cross-compiled for `masm` syntax from `tests/misc/sum_multiples_euler.move`

//# publish
// Bytecode version v8
module 0xc0ffee::sum_multiples
// Function definition at index 0
#[persistent] public fun sum_multiples_3_or_5(l0: u64): u64
    local l1: u64
    local l2: u64
    local l3: bool
    ld_u64 0
    st_loc l1
    ld_u64 0
    st_loc l2
l4: copy_loc l2
    // @5
    copy_loc l0
    lt
    br_false l0
    copy_loc l2
    ld_u64 3
    // @10
    mod
    ld_u64 0
    eq
    br_false l1
    ld_true
    // @15
    st_loc l3
l5: move_loc l3
    br_true l2
    branch l3
l2: move_loc l1
    // @20
    copy_loc l2
    add
    st_loc l1
l3: move_loc l2
    ld_u64 1
    // @25
    add
    st_loc l2
    branch l4
l1: copy_loc l2
    ld_u64 5
    // @30
    mod
    ld_u64 0
    eq
    st_loc l3
    branch l5
    // @35
l0: move_loc l1
    ret

// Function definition at index 1
#[persistent] public fun test_sum_multiples()
    ld_u64 10
    call sum_multiples_3_or_5
    ld_u64 23
    eq
    br_false l0
    // @5
    ld_u64 1000
    call sum_multiples_3_or_5
    ld_u64 233168
    eq
    br_false l1
    // @10
    ret
l1: ld_u64 1
    abort
l0: ld_u64 0
    abort



//# run 0xc0ffee::sum_multiples::test_sum_multiples