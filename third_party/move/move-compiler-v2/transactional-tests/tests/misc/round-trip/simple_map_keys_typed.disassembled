//**** Cross-compiled for `masm` syntax from `tests/misc/simple_map_keys_typed.move`

//# publish
// Bytecode version v8
module 0x42::simple_map
struct Element<T0, T1> has copy + drop + store
  key: T0
  value: T1

struct SimpleMap<T0, T1> has copy + drop + store
  data: vector<Element<T0, T1>>

// Function definition at index 0
#[persistent] public fun keys<T0: copy, T1>(l0: &SimpleMap<T0, T1>): vector<T0>
    local l1: &vector<Element<T0, T1>>
    local l2: vector<T0>
    local l3: u64
    local l4: u64
    local l5: &Element<T0, T1>
    move_loc l0
    borrow_field SimpleMap<T0, T1>, data
    st_loc l1
    vec_pack <T0>, 0
    st_loc l2
    // @5
    ld_u64 0
    st_loc l3
    copy_loc l1
    vec_len <Element<T0, T1>>
    st_loc l4
    // @10
l1: copy_loc l3
    copy_loc l4
    lt
    br_false l0
    copy_loc l1
    // @15
    copy_loc l3
    vec_borrow <Element<T0, T1>>
    st_loc l5
    mut_borrow_loc l2
    move_loc l5
    // @20
    borrow_field Element<T0, T1>, key
    read_ref
    vec_push_back <T0>
    move_loc l3
    ld_u64 1
    // @25
    add
    st_loc l3
    branch l1
l0: move_loc l1
    pop
    // @30
    move_loc l2
    ret

// Function definition at index 1
#[persistent] public fun run()
    local l0: Element<u64, u64>
    local l1: SimpleMap<u64, u64>
    ld_u64 1
    ld_u64 2
    pack Element<u64, u64>
    st_loc l0
    copy_loc l0
    // @5
    copy_loc l0
    move_loc l0
    vec_pack <Element<u64, u64>>, 3
    pack SimpleMap<u64, u64>
    st_loc l1
    // @10
    borrow_loc l1
    call keys<u64, u64>
    ld_const<vector<u64>> [1, 1, 1]
    eq
    br_false l0
    // @15
    ret
l0: ld_u64 33
    abort



//# run  0x42::simple_map::run