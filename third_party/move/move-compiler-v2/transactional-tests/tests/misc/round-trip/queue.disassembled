//**** Cross-compiled for `masm` syntax from `tests/misc/queue.move`

//# publish
// Bytecode version v8
module 0x42::queue
use 0x1::vector
struct Queue<T0> has drop + key
  data: vector<T0>

// Function definition at index 0
#[persistent] public fun create<T0>(): Queue<T0>
    vec_pack <T0>, 0
    pack Queue<T0>
    ret

// Function definition at index 1
#[persistent] public fun dequeue<T0>(l0: &mut Queue<T0>): T0
    move_loc l0
    mut_borrow_field Queue<T0>, data
    ld_u64 0
    call vector::remove<T0>
    ret

// Function definition at index 2
#[persistent] public fun enqueue<T0>(l0: &mut Queue<T0>, l1: T0)
    move_loc l0
    mut_borrow_field Queue<T0>, data
    move_loc l1
    vec_push_back <T0>
    ret

// Function definition at index 3
#[persistent] public fun test_queue_operations()
    local l0: Queue<u64>
    call create<u64>
    st_loc l0
    mut_borrow_loc l0
    ld_u64 40
    call enqueue<u64>
    // @5
    mut_borrow_loc l0
    ld_u64 41
    call enqueue<u64>
    mut_borrow_loc l0
    ld_u64 42
    // @10
    call enqueue<u64>
    mut_borrow_loc l0
    call dequeue<u64>
    ld_u64 40
    eq
    // @15
    br_false l0
    mut_borrow_loc l0
    ld_u64 43
    call enqueue<u64>
    mut_borrow_loc l0
    // @20
    call dequeue<u64>
    ld_u64 41
    eq
    br_false l1
    mut_borrow_loc l0
    // @25
    call dequeue<u64>
    ld_u64 42
    eq
    br_false l2
    mut_borrow_loc l0
    // @30
    call dequeue<u64>
    ld_u64 43
    eq
    br_false l3
    ret
    // @35
l3: ld_u64 4
    abort
l2: ld_u64 3
    abort
l1: ld_u64 2
    // @40
    abort
l0: ld_u64 1
    abort



//# run 0x42::queue::test_queue_operations