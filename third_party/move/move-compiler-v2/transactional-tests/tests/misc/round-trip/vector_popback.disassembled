//**** Cross-compiled for `masm` syntax from `tests/misc/vector_popback.move`

//# publish
// Bytecode version v8
module 0x42::vector
use 0x1::vector
// Function definition at index 0
#[persistent] public fun remove<T0>(l0: &mut vector<T0>, l1: u64): T0
    local l2: u64
    copy_loc l0
    freeze_ref
    vec_len <T0>
    st_loc l2
    copy_loc l1
    // @5
    copy_loc l2
    ge
    br_false l0
    move_loc l0
    pop
    // @10
    ld_u64 1
    abort
l0: move_loc l2
    ld_u64 1
    sub
    // @15
    st_loc l2
l2: copy_loc l1
    copy_loc l2
    lt
    br_false l1
    // @20
    copy_loc l0
    copy_loc l1
    move_loc l1
    ld_u64 1
    add
    // @25
    st_loc l1
    copy_loc l1
    vec_swap <T0>
    branch l2
l1: move_loc l0
    // @30
    vec_pop_back <T0>
    ret

// Function definition at index 1
fun create(): vector<u64>
    ld_const<vector<u64>> [1, 2, 3]
    ret

// Function definition at index 2
#[persistent] public fun test_fold()
    local l0: u64
    local l1: vector<u64>
    ld_u64 0
    st_loc l0
    ld_const<vector<u64>> [1]
    st_loc l1
    mut_borrow_loc l1
    // @5
    call vector::reverse<u64>
l1: borrow_loc l1
    call vector::is_empty<u64>
    br_true l0
    mut_borrow_loc l1
    // @10
    vec_pop_back <u64>
    pop
    ld_u64 0
    st_loc l0
    branch l1
    // @15
l0: move_loc l0
    ld_u64 0
    eq
    br_false l2
    ret
    // @20
l2: ld_u64 0
    abort

// Function definition at index 3
#[persistent] public fun test_remove()
    local l0: vector<u64>
    call create
    st_loc l0
    mut_borrow_loc l0
    ld_u64 1
    call remove<u64>
    // @5
    ld_u64 2
    eq
    br_false l0
    borrow_loc l0
    vec_len <u64>
    // @10
    ld_u64 2
    eq
    br_false l1
    borrow_loc l0
    ld_u64 0
    // @15
    vec_borrow <u64>
    read_ref
    ld_u64 1
    eq
    br_false l2
    // @20
    borrow_loc l0
    ld_u64 1
    vec_borrow <u64>
    read_ref
    ld_u64 3
    // @25
    eq
    br_false l3
    ret
l3: ld_u64 0
    abort
    // @30
l2: ld_u64 0
    abort
l1: ld_u64 0
    abort
l0: ld_u64 0
    // @35
    abort



//# run 0x42::vector::test_fold

//# run 0x42::vector::test_remove