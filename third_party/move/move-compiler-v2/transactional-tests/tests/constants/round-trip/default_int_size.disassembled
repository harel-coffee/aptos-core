//**** Cross-compiled for `masm` syntax from `tests/constants/default_int_size.move`

//# run
// Bytecode version v8
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    local l1: u64
    ld_u64 1
    st_loc l0
    ld_u64 1
    st_loc l1
l1: copy_loc l1
    // @5
    ld_u64 64
    lt
    br_false l0
    ld_u64 2
    move_loc l0
    // @10
    mul
    st_loc l0
    move_loc l1
    ld_u64 1
    add
    // @15
    st_loc l1
    branch l1
l0: ret



//# run
// Bytecode version v8
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    local l1: u64
    ld_u64 256
    st_loc l0
    ld_u64 1
    st_loc l1
l1: copy_loc l1
    // @5
    ld_u64 56
    lt
    br_false l0
    ld_u64 2
    move_loc l0
    // @10
    mul
    st_loc l0
    move_loc l1
    ld_u64 1
    add
    // @15
    st_loc l1
    branch l1
l0: ret



//# run
// Bytecode version v8
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    local l1: u64
    ld_u64 65536
    st_loc l0
    ld_u64 1
    st_loc l1
l1: copy_loc l1
    // @5
    ld_u64 48
    lt
    br_false l0
    ld_u64 2
    move_loc l0
    // @10
    mul
    st_loc l0
    move_loc l1
    ld_u64 1
    add
    // @15
    st_loc l1
    branch l1
l0: ret



//# run
// Bytecode version v8
script
// Function definition at index 0
entry public fun main()
    local l0: u64
    local l1: u64
    ld_u64 1
    st_loc l0
    ld_u64 1
    st_loc l1
l1: copy_loc l1
    // @5
    ld_u64 65
    lt
    br_false l0
    ld_u64 2
    move_loc l0
    // @10
    mul
    st_loc l0
    move_loc l1
    ld_u64 1
    add
    // @15
    st_loc l1
    branch l1
l0: ret

