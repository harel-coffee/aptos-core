//**** Cross-compiled for `masm` syntax from `tests/inlining/multi_param.move`

//# publish
// Bytecode version v8
module 0x42::Test
struct Elem<T0, T1> has drop
  k: T0
  v: T1

// Function definition at index 0
#[persistent] public fun test()
    local l0: vector<Elem<u64, u64>>
    local l1: &mut vector<Elem<u64, u64>>
    local l2: u64
    local l3: u64
    local l4: &mut Elem<u64, u64>
    local l5: &mut u64
    ld_u64 1
    ld_u64 2
    pack Elem<u64, u64>
    vec_pack <Elem<u64, u64>>, 1
    st_loc l0
    // @5
    mut_borrow_loc l0
    st_loc l1
    ld_u64 0
    st_loc l2
    ld_u64 0
    // @10
    st_loc l3
l1: copy_loc l3
    copy_loc l1
    freeze_ref
    vec_len <Elem<u64, u64>>
    // @15
    lt
    br_false l0
    copy_loc l1
    copy_loc l3
    vec_mut_borrow <Elem<u64, u64>>
    // @20
    st_loc l4
    move_loc l2
    copy_loc l4
    borrow_field Elem<u64, u64>, k
    move_loc l4
    // @25
    mut_borrow_field Elem<u64, u64>, v
    st_loc l5
    read_ref
    move_loc l5
    read_ref
    // @30
    add
    add
    st_loc l2
    move_loc l3
    ld_u64 1
    // @35
    add
    st_loc l3
    branch l1
l0: move_loc l1
    pop
    // @40
    move_loc l2
    ld_u64 3
    eq
    br_false l2
    ret
    // @45
l2: ld_u64 0
    abort



//# run 0x42::Test::test